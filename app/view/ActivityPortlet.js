/*
 * File: app/view/ActivityPortlet.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('JavisERP.view.ActivityPortlet', {
    extend: 'Ext.grid.Panel',

    border: 0,
    height: 250,
    itemId: 'activityportlet',
    minHeight: 250,
    header: false,
    forceFit: true,
    store: 'ActivityStore',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {

            },
            columns: [
                {
	                width: 30,
	                menuDisabled: true,
	                xtype: 'actioncolumn',
	                tooltip: 'Edit Activity',
	                align: 'center',
	                getClass: function(v,meta,r){ return r.data.type_cls_edit; },
	                itemId: 'activity_edit',
                    resourceId: 'activity_edit',
                    resourceType: 'hide',
                    plugins: ['permission']
	            },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'id',
                    text: 'Id'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 3,
                    dataIndex: 'title',
                    text: 'Title'
                },
                {
                    xtype: 'datecolumn',
                    flex: 1,
                    format: 'm/d/Y',
                    dataIndex: 'post_date',
                    text: 'Date'
                },
                {
                    xtype: 'datecolumn',
                    flex: 1,
                    format: 'g:ia',
                    emptyCellText: 'All Day',
                    dataIndex: 'post_time',
                    text: 'Time'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 2,
                    dataIndex: 'owner_name',
                    text: 'Owner'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 1,
                    dataIndex: 'status_id',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 3,
                    dataIndex: 'client_name',
                    text: 'Client'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 2,
                    dataIndex: 'assigned_to_name',
                    text: 'Assigned To'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'filtercombo',
                            itemId: 'typeFilter',
                            hideLabel: true,
                            emptyText: 'Filter Activity Type...',
                            displayField: 'description',
                            store: 'ActivityTypeStore',
                            recordField: 'id',
                            searchField: 'type_id',
                            clearable: true,
                            onClear: function(){
                            	var store = Ext.StoreMgr.lookup('ActivityStore');
                            	store.clearFilter(false);
                            },
                            onSearch: function(filtervalue, filterfield){
                            	var store = Ext.StoreMgr.lookup('ActivityStore');
                            	if (filtervalue){
	                            	store.clearFilter(true);
	                            	var myfilter = Ext.create('Ext.util.Filter', {
	                            			property: filterfield,
	                            			value: filtervalue
														    });
														    // Apply filter to store
														    store.filter(myfilter);
														  } else {
														  	store.clearFilter(false);
														  }
                            }
                            
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    itemId: 'activityPageToolBar',
                    displayInfo: true,
                    store: 'ActivityStore'
                }
            ],
            listeners: {
                beforerender: {
                    fn: me.onActivityportletBeforeRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onActivityportletBeforeRender: function(abstractcomponent, options) {
			var store = Ext.StoreMgr.lookup('ActivityStore');
    	store.load();
    }

});