/*
 * File: app/controller/PaymentController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('JavisERP.controller.PaymentController', {
    extend: 'Ext.app.Controller',

    stores: [
        'AppliedPaymentStore',
        'Duration',
        'PaymentStore',
        'ContractStore'
    ],

    refs: [
        {
            ref: 'paymentWindow',
            selector: 'window[cls=paymentWindow]'
        },
        {
            ref: 'contractCombo',
            selector: 'combobox[cls=contractCombo]',
            xtype: 'combobox'
        }
    ],

    onPaymentWindowBeforeShow: function(abstractcomponent, options) {
        var comboFieldBox = Ext.create('Ext.ux.form.field.BoxSelect',
            {
                xtype: 'comboboxselect',
                fieldLabel: 'Apply Payment to Duration(s)',
                displayField: 'description',
                emptyText: 'select a duration...',
                descField: 'id',
                valueField: 'id',
                store: 'Duration',
                queryMode: 'local',
                typeAdead:true,
                growMax:100,
                filterPickList:true,
                anchor:'95%',
                name: 'durationlist[]',
                cls:'durationlist'
            });

        //this.getContractStoreStore().filter('client_id',me.client_id);
        abstractcomponent.down().getForm().findField('client_name').setValue(me.client_name);
        abstractcomponent.down().getForm().findField('client_id').setValue(me.client_id);
        var container = abstractcomponent.query('fieldcontainer > #column1');

        container[0].add(comboFieldBox);
    },

    onContractComboChange: function(field, newValue, oldValue, options) {
        this.getDurationStore().clearFilter(true);
        this.getDurationStore().filter('contract_id',newValue);

    },

    init: function(application) {
        me = this;


        this.control({
            "#paymentWindow": {
                beforeshow: this.onPaymentWindowBeforeShow
            },
            "combobox[cls=contractCombo]": {
                change: this.onContractComboChange
            }
        });
    }

});
